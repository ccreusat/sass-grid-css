@use "../abstracts" as *;

$grid-columns: 12;

.grid-container {
  --#{$prefix}grid-cols: #{$grid-columns};
  --#{$prefix}grid-gap: 1.6rem;
  grid-auto-rows: 20rem;

  display: grid;
  grid-gap: var(--#{$prefix}grid-gap, 0); // default value is 0.
  grid-template-columns: repeat(
    var(--#{$prefix}grid-cols),
    1fr
  ); // grid has 12 flexible columns by default.

  & > * {
    grid-column-end: span var(--#{$prefix}grid-cols); // each grid item will take full width by default.
  }

  @include mq($breakpoints, "xs") {
    --#{$prefix}grid-cols: #{map-get($default-grid-columns, "xs")};
  }

  @include mq($breakpoints, "md") {
    --#{$prefix}grid-cols: #{map-get($default-grid-columns, "md")};
  }

  @include mq($breakpoints, "lg") {
    --#{$prefix}grid-cols: #{map-get($default-grid-columns, "lg")};
  }

  @each $key, $breakpoint in $breakpoints {
    @each $value, $column in $default-grid-columns {
      // @if $key == $value {
      @if $key == "xs" {
        @for $i from 1 through 4 {
          .col-#{$i} {
            grid-column: span #{$i};
          }
          .col-start-#{$key}-#{$i} {
            grid-column-start: #{$i};
          }
          .col-end-#{$key}-#{$i + 1} {
            grid-column-end: #{$i + 1};
          }
        }
      } @else {
        @media (min-width: $breakpoint) {
          @for $i from 1 through $column {
            .col-#{$key}-#{$i} {
              grid-column: span #{$i};
            }
            .col-start-#{$key}-#{$i} {
              grid-column-start: #{$i};
            }
            .col-end-#{$key}-#{$i + 1} {
              grid-column-end: #{$i + 1};
            }
          }
        }
        // }
      }
    }
  }
}

// Responsive grid
.grid-auto-xs,
.grid-auto-sm,
.grid-auto-md,
.grid-auto-lg,
.grid-auto-xl {
  display: grid;
  grid-gap: var(--grid-gap, 0);
  grid-auto-rows: 20rem;
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
}

.grid-auto-xs {
  --col-min-width: 8rem;
} // 80px
.grid-auto-sm {
  --col-min-width: 10rem;
} // 100px
.grid-auto-md {
  --col-min-width: 15rem;
} // 150px
.grid-auto-lg {
  --col-min-width: 20rem;
} // 200px
.grid-auto-xl {
  --col-min-width: 25rem;
} // 250px

.grid-gap-xs {
  --grid-gap: var(--space-xs, 0.5rem);
}
.grid-gap-sm {
  --grid-gap: var(--space-sm, 0.75rem);
}
.grid-gap-md {
  --grid-gap: var(--space-md, 1.25rem);
}
.grid-gap-lg {
  --grid-gap: var(--space-lg, 2rem);
}
.grid-gap-xl {
  --grid-gap: var(--space-xl, 3.25rem);
}
